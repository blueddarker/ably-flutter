import 'package:ably_flutter/ably_flutter.dart';
import 'package:flutter/services.dart';

/// An exception generated by the native client library called by this plugin
class AblyException implements Exception {
  /// platform error code
  ///
  /// Mostly used for storing [PlatformException.code]
  final String? code;

  /// platform error message
  ///
  /// Mostly used for storing [PlatformException.message]
  final String? message;

  /// error message from ably native sdk
  final ErrorInfo? errorInfo;

  /// initializes with no defaults
  AblyException({
    this.code,
    this.errorInfo,
    this.message,
  });

  /// create AblyException from [PlatformException]
  AblyException.fromPlatformException(PlatformException exception)
      : code = exception.code,
        errorInfo = exception.details as ErrorInfo?,
        message = exception.message;

  @override
  String toString() {
    final buffer = StringBuffer('AblyException:');

    if (errorInfo != null) {
      buffer.write(' errorInfo=($errorInfo)');
    }

    if (message != null) {
      buffer.write(' message=($message)');
    }

    if (code != null) {
      buffer.write(' code=($code)');
    }

    return buffer.toString();
  }
}
